services:
  bet_maker:
    build:
      context: .\BetMaker
      dockerfile: Dockerfile
    container_name: bet_maker
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/bet_maker
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq/

  line_provider:
    build:
      context: .\LineProvider
      dockerfile: Dockerfile
    container_name: line_provider
    ports:
      - "8001:8001"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq/

  db:
    image: postgres:14
    container_name: bet_maker_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bet_maker
      POSTGRES_EXTRA_DATABASE: bet_maker_test
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      retries: 5
    command: >
      bash -c "
      docker-entrypoint.sh postgres &
      until pg_isready -U postgres; do
        echo 'Waiting for PostgreSQL to start...';
        sleep 1;
      done;
      psql -U postgres -c 'CREATE DATABASE bet_maker_test;' || echo 'Database already exists';
      wait"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      retries: 5

  line_provider_tests:
    build:
      context: ./LineProvider
      dockerfile: Dockerfile
    container_name: line_provider_tests
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq/
    working_dir: /app
    entrypoint: sh -c "export PYTHONPATH=/app && pytest --asyncio-mode=auto"

  bet_maker_tests:
    build:
      context: ./BetMaker
      dockerfile: Dockerfile
    container_name: bet_maker_tests
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/bet_maker_test
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq/
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    entrypoint: sh -c "export PYTHONPATH=/app && alembic upgrade head && pytest --asyncio-mode=auto"